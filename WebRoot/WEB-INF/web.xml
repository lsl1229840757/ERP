<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" id="WebApp_ID" version="3.0">
  <display-name>Erp_Pro</display-name>
  <welcome-file-list>
    <welcome-file>index.html</welcome-file>
    <welcome-file>index.htm</welcome-file>
    <welcome-file>index.jsp</welcome-file>
    <welcome-file>default.html</welcome-file>
    <welcome-file>default.htm</welcome-file>
    <welcome-file>default.jsp</welcome-file>
  </welcome-file-list>
  
   
   <!-- 
    	防止hibernate的session关闭问题，主要是应用于延迟加载，spring在管理session，
    	把事务切分在Service层，当前Service方法开始调用的时候spring会开启一个session，
    	Service执行完毕就会关闭session，如果关闭了session，就不会有延迟加载
    	openSessionInViewerFilter让session不被关闭
    	openSessionInViewerFilter一定要在struts过滤器上面
     -->
    <filter>  
        <filter-name>openSessionInViewerFilter</filter-name>  
        <filter-class>org.springframework.orm.hibernate3.support.OpenSessionInViewFilter</filter-class>  
    </filter>  
    <filter-mapping>  
        <filter-name>openSessionInViewerFilter</filter-name>  
        <url-pattern>/*</url-pattern>  
    </filter-mapping>
  <!-- 
  	struts的核心转发器
   -->
  	<filter>
        <filter-name>struts2</filter-name>
        <filter-class>org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>struts2</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
  
   <!-- 
   		spring的容器一定是服务器已启动就创建,spring提供一个监听器，专门做ioc容器初始化的
    -->
    <listener>
    	<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>
    <!-- 指定spring文件的位置，给上面的 listener-->
    <context-param>
    	<param-name>contextConfigLocation</param-name>
    	<param-value>classpath:ApplicationContext.xml</param-value>
    </context-param>
  
  
  
</web-app>